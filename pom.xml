<project 
        xmlns="http://maven.apache.org/POM/4.0.0" 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <!-- 
        Comment:
        1.  plan to use jetty as jndi, but seems not allow remotely access datasource by jndi from outside container
        2.  jetty does not support remote jndi 
        3.  plan:
                a) in one jvm: one jetty instance with datasource by jetty-maven-plugin
                b) in one jvm: junit for datasource 
        
        
        Remark:
        1.  jndi scope, http://eclipse.org/jetty/documentation/current/using-jetty-jndi.html
            a)  jetty.xml               at either the JVM level or the Server level
            b)  WEB-INF/jetty-env.xml   to the web app in which the file resides
            c)  context xml file        at the level of the webapp to which they apply
        
        
        Environment:
        1.  Windows 7 64 bit (assume OS installed in C:\Windows)
        2.  Eclipse 4.4
        3.  JDK 8.0
        4.  zwamp-1.1.2 (mysql)   //to do: launch it wih antrun-maven-plugin
       
       
        Approach1 - all automate
        1.  "mvn install". This will include                 
        2.  with maven-failsafe-plugin, any java file name with "IT" will be treated as 
            intergration test (by maven, the phase is integration-test). 
        3.  the integration test report can be found in \target\failsafe-reports
       

        Reference:
        jetty-maven-plugin:     http://www.eclipse.org/jetty/documentation/current/jetty-maven-plugin.html
        jetty.xml               http://www.eclipse.org/jetty/documentation/current/jetty-xml-config.html
        jetty-web.xml           http://www.eclipse.org/jetty/documentation/current/jetty-web-xml-config.html
        jetty-env.xml           http://www.eclipse.org/jetty/documentation/current/jetty-env-xml.html
        

    -->
        
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jetty.version>9.3.0.M2</jetty.version>      
    </properties>

    
    <modelVersion>4.0.0</modelVersion>
    <groupId>jetty-snippets</groupId>
    <artifactId>jetty-snippets</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    
    
    <build>   

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>   
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.eclipse.jetty</groupId>
                                        <artifactId>jetty-maven-plugin</artifactId>
                                        <versionRange>[9.3.0.M2]</versionRange>
                                        <goals>
                                            <goal>start</goal>
                                            <goal>stop</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <execute>  
                                            <runOnIncremental>false</runOnIncremental>  
                                        </execute>                                            
                                    </action>
                                </pluginExecution>  
                                                                            
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
                
        <plugins>       
               
            <!-- initialize --> 
                       
            <!-- compile -->                  
            <plugin>                                   
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>1.7</source>     <!-- jetty-maven-plugin 9 requires 1.7 -->
                    <target>1.7</target>
                </configuration>                         
            </plugin>  
            

            <!-- pre-integration-test -->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>5.1.9</version>
                    </dependency>                                                                  
                </dependencies>

                <configuration>
                    <scanIntervalSeconds>10</scanIntervalSeconds>    
                    <stopKey>foo</stopKey>
                    <stopPort>9999</stopPort>                                                             
                    <jettyXml>src/main/resources/jetty.xml</jettyXml>                     
                    <!--                     
                        use with web.xml
                        http://www.eclipse.org/jetty/documentation/current/jetty-maven-plugin.html#jetty-run-goal
                     -->  
                    <!-- 
                    <webApp>                      
                        <jettyEnvXml>src/main/webapp/WEB-INF/jetty-env.xml</jettyEnvXml>
                    </webApp>
                    -->                 
                </configuration>
                
                <executions>
                    <execution>
                        <id>start-jetty for JNDI server</id>
                        <phase>pre-integration-test</phase>
                        <!-- 
                            allow plugin go on running without interrupt                            
                            http://www.eclipse.org/jetty/documentation/current/jetty-maven-plugin.html#jetty-run-forked-goal                        
                         -->                        
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>                            
                            <scanIntervalSeconds>0</scanIntervalSeconds>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-jetty</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            

            <!-- integration-test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.12</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
                   
        </plugins>    
    </build>     
        

    <dependencies>
           
        <!-- junit -->                
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        
                 
        <!-- mysql -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.9</version>
        </dependency>
                
        
        
        
        <!-- 
            1.  without scope = provide, it hit error
                    java.lang.IllegalArgumentException: Object of class 'org.eclipse.jetty.maven.plugin.JettyWebAppContext'
            2.  seems as if there are multiple class loaders conflicting.                    
            3.  reference: 
                    http://stackoverflow.com/a/10812220        
         -->
                
        <!-- instantiate jetty jndi -->    
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-jndi</artifactId>
            <version>${jetty.version}</version>
            <scope>provided</scope>
        </dependency>
                
        <!-- for import org.eclipse.jetty.plus.webapp.EnvConfiguration; -->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-plus</artifactId>
            <version>${jetty.version}</version>
            <scope>provided</scope>
        </dependency>




    </dependencies>             
</project>